/*
 * AboutFrame.java
 *
 * Created on March 19, 2002, 9:14 AM
 */

package simple.ui.janelas;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTextArea;
import javax.swing.WindowConstants;
import javax.swing.border.CompoundBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.border.EtchedBorder;

/**
 * Classe que cria uma janela para fornecer a opção segmentar uma imagem de forma global
 * 
 * @author Andre Cavalcante Hora
 * @author Eduardo Santiago Moura
 * @author Paulo de Tarso Firmino Junior
 * @author Vinicius de Araujo Porto
 * @author Yuska Paola Aguiar
 */
public class JanelaSobre extends JDialog implements KeyListener {
	
	private static final long serialVersionUID = 1L;
	private JTextArea creditsArea, licenseArea;
	private JButton closeButton;
	private JLabel jLabel2, jLabel3, jLabel4;
	private JPanel jPanel1, jPanel2;
	private JLabel nameLabel;
	private JTabbedPane tabbedPane;
	
	/** Creates new form AboutFrame */
	public JanelaSobre() {
		Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
		int screenHeight = d.height;
		int screenWidth = d.width;
		setLocation(screenWidth/2 - 510/2,screenHeight/2 - 350/2);		
		setModal(true);
		initComponents();
		initCustomComponents();
		fillText();
		creditsArea.addKeyListener(this);
		licenseArea.addKeyListener(this);
		closeButton.addKeyListener(this);
		tabbedPane.addKeyListener(this);
		setSize(510,380);
	} 
	
	public void exibeJanela(){
		setVisible(true);
	}	
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	private void initComponents() {
		JPanel aboutPane;
		JPanel creditsPane;
		GridBagConstraints gridBagConstraints;
		JScrollPane jScrollPane1;
		JScrollPane jScrollPane3;
		JPanel licensePane;
		
		tabbedPane = new JTabbedPane();
		aboutPane = new JPanel();
		jPanel2 = new JPanel();
		jLabel3 = new JLabel();
		nameLabel = new JLabel();
		jLabel4 = new JLabel();
		jLabel2 = new JLabel();
		licensePane = new JPanel();
		jScrollPane1 = new JScrollPane();
		licenseArea = new JTextArea();
		creditsPane = new JPanel();
		jScrollPane3 = new JScrollPane();
		creditsArea = new JTextArea();
		jPanel1 = new JPanel();
		closeButton = new JButton();
		
		setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
		setModal(true);
		setName("aboutDialog");
		setResizable(false);
		addWindowListener(new WindowAdapter() {
			public void windowClosing(WindowEvent evt) {
				closeDialog(evt);
			}
		});
		
		tabbedPane.setPreferredSize(new Dimension(620, 400));
		aboutPane.setLayout(new GridBagLayout());
		
		jPanel2.setLayout(new GridBagLayout());
		
		jPanel2.setBorder(new CompoundBorder(new EtchedBorder(EtchedBorder.RAISED), new EmptyBorder(new Insets(20, 20, 20, 10))));
		jLabel3.setBackground(new Color(255, 255, 255));
		jLabel3.setIcon(new ImageIcon("Resource/Logos/logo_visao2.png"));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.gridheight = 3;
		gridBagConstraints.ipadx = 8;
		gridBagConstraints.ipady = 2;
		gridBagConstraints.insets = new Insets(0, 0, 0, 10);
		jPanel2.add(jLabel3, gridBagConstraints);
		
		nameLabel.setFont(new Font("Dialog", 1, 14));
		nameLabel.setText("LONG_NAME VERSION");
		gridBagConstraints = new GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.anchor = GridBagConstraints.WEST;
		jPanel2.add(nameLabel, gridBagConstraints);
		
		jLabel4.setFont(new Font("Dialog", 0, 12));
		jLabel4.setText("http://www.dsc.ufcg.edu.br/~yuska/pihm");
		gridBagConstraints = new GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.anchor = GridBagConstraints.WEST;
		gridBagConstraints.insets = new Insets(5, 0, 5, 0);
		jPanel2.add(jLabel4, gridBagConstraints);
		
		jLabel2.setFont(new Font("Dialog", 0, 12));
		jLabel2.setText("Development \u00a9 Laboratório de Visão Computacional");
		gridBagConstraints = new GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.anchor = GridBagConstraints.WEST;
		jPanel2.add(jLabel2, gridBagConstraints);
		
		aboutPane.add(jPanel2, new GridBagConstraints());
		
		tabbedPane.addTab("FePDI", aboutPane);
		
		licensePane.setLayout(new BorderLayout());
		
		licensePane.setBorder(new EmptyBorder(new Insets(5, 5, 5, 5)));
		licenseArea.setEditable(false);
		licenseArea.setLineWrap(true);
		licenseArea.setWrapStyleWord(true);
		creditsArea.setEditable(false);
		jScrollPane1.setViewportView(licenseArea);
		
		licensePane.add(jScrollPane1, BorderLayout.CENTER);
		
		tabbedPane.addTab("Sobre", licensePane);
		
		creditsPane.setLayout(new BorderLayout());
		
		creditsPane.setBorder(new EmptyBorder(new Insets(5, 5, 5, 5)));
		jScrollPane3.setViewportView(creditsArea);
		
		creditsPane.add(jScrollPane3, BorderLayout.CENTER);
		
		tabbedPane.addTab("Créditos", creditsPane);       
		
		getContentPane().add(tabbedPane, java.awt.BorderLayout.CENTER);
		
		closeButton.setText("OK");
		closeButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				closeAction(evt);
			}
		});
		jPanel1.add(closeButton);
		getContentPane().add(jPanel1, BorderLayout.SOUTH);
	}
	
	private void closeAction(ActionEvent evt) {
		closeDialog(null);
	}
	
	private void closeDialog(WindowEvent evt) {
		setVisible(false);
		dispose();
	}
	
	private void initCustomComponents() {
		setTitle("Sobre - Ferramenta de Processamento Digital de Imagens");
		nameLabel.setFont(new Font("MyFont",Font.BOLD,16));
		nameLabel.setText("FePDI - v1.0");
	}  
	
	
	private void fillText() {
		licenseArea.insert(loadText("Resource/Help/sobre.txt"),0);
		licenseArea.setCaretPosition(0);
		creditsArea.insert(loadText("Resource/Help/equipe.txt"),0);
		creditsArea.setCaretPosition(0);
	}
	
	public String loadText(String fileName){
		Scanner sc = null;
		try {
			sc = new Scanner(new File(fileName));
		} catch (FileNotFoundException e) {}
		String sobre = "";
		while(sc.hasNextLine()) sobre += sc.nextLine() + "\n";
		return sobre.trim();
	}
	
	/**
	 * Metodo captura os eventos do teclado para ENETER e  ESCAPE
	 */
	public void keyPressed(KeyEvent e) {
		if (e.getKeyCode() == KeyEvent.VK_ESCAPE || e.getKeyCode() == KeyEvent.VK_ENTER) dispose();
	}
	
	public void keyReleased(KeyEvent e) {}
	
	public void keyTyped(KeyEvent e) {}	
}
